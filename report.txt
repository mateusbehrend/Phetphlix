I believe that I was able to finish all of the program's functionality. When I ran this program using Visual C++, I was successfully able to generate an accurate list of movie recommendations based on the certain size desired. 
Some bugs that I haven’t been able to fix is that my program leaks 40 bytes of memory and I was unable to identify where it is leaking this memory. 40 bytes is a really small amount of memory, but it's not a good thing to have any sort of memory leak. Additionally, I took a “shortcut” by not sorting every item that has a compatibility score of over 1. I thought it would be unnecessary to sort through every item, as we are only returning a vector with a number of elements that is specified. Sorting every item to me seemed like it would only add an unnecessary amount of runtime, it is a program that already takes some amount of time to compile on my machine. So, I iterated through my vector of compatibility scores, and pulled out the biggest value every time, and deleted it from the list. This would result in a big O of O(N) because we are multiplying a constant that is omitted in the big O notation rather than having a Big O of O(NlogN) if we were to sort the whole vector. Additionally, I'm not sure if this a bug, or if the testing cases will never induce an invalid email, but when the program is run with an invalid email, the program crashes. 
I did not use any banned STL components to my knowledge.